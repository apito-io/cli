name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux-latest, linux-arm-latest, macos-latest, macos-arm-latest]
        include:
          - os: linux-latest
            goos: linux
            goarch: amd64
            ext: ""
          - os: linux-arm-latest
            goos: linux
            goarch: arm64
            ext: ""
          - os: macos-latest
            goos: darwin
            goarch: amd64
            ext: ""
          - os: macos-arm-latest
            goos: darwin
            goarch: arm64
            ext: ""
          # - os: windows-latest
          #   goos: windows
          #   goarch: amd64
          #   ext: ".exe"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.5

      - name: Install dependencies
        run: go mod tidy

      - name: Build static binary
        run: |
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o apito${{ matrix.ext }} -ldflags "-w -s"

      - name: Zip binary
        run: |
          zip apito-${{ matrix.goos }}-${{ matrix.goarch }}.zip apito${{ matrix.ext }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: apito-${{ matrix.goos }}-${{ matrix.goarch }}
          path: apito-${{ matrix.goos }}-${{ matrix.goarch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: apito-${{ matrix.os }}-${{ matrix.goarch }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            apito-linux-amd64.zip
            apito-linux-arm64.zip
            apito-darwin-amd64.zip
            apito-darwin-arm64.zip
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "This is an automatic release for version ${{ github.ref_name }}."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  goreleaser:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.5

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
