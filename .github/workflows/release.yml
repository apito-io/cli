name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            ext: ""
          - os: macos-latest
            goos: darwin
            goarch: amd64
            ext: ""
          - os: windows-latest
            goos: windows
            goarch: amd64
            ext: ".exe"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            node-version: '20'

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
            go-version: 1.22.3
            node-version: '20'

      - name: Install dependencies
        run: go mod tidy

      - name: Build static binary
        run: |
            CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o apito${{ matrix.ext }} -ldflags "-w -s"

      - name: Zip binary
        run: |
            zip apito-${{ matrix.goos }}-${{ matrix.goarch }}.zip apito${{ matrix.ext }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: apito-${{ matrix.goos }}-${{ matrix.goarch }}
          path: apito-${{ matrix.goos }}-${{ matrix.goarch }}.zip
  release:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        goarch: [amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: apito-${{ matrix.os }}-${{ matrix.goarch }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            apito-linux-amd64.zip
            apito-darwin-amd64.zip
            apito-windows-amd64.zip
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "This is an automatic release for version ${{ github.ref_name }}."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: apito-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Unzip binary
        run: |
          unzip apito-${{ matrix.goos }}-${{ matrix.goarch }}.zip -d .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker buildx build --platform ${{ matrix.goos }}/amd64 -t ghcr.io/${{ github.repository_owner }}/apito:${{ github.ref_name }} --push .
